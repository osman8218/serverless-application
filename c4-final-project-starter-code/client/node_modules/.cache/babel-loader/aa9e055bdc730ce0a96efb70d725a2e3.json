{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\123043\\\\Documents\\\\Code\\\\udacity\\\\udacity-project4\\\\udacity-project4\\\\client\\\\src\\\\components\\\\EditTodo.tsx\";\nimport * as React from 'react';\nimport { Form, Button } from 'semantic-ui-react';\nimport { getUploadUrl, uploadFile } from '../api/todos-api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar UploadState;\n\n(function (UploadState) {\n  UploadState[UploadState[\"NoUpload\"] = 0] = \"NoUpload\";\n  UploadState[UploadState[\"FetchingPresignedUrl\"] = 1] = \"FetchingPresignedUrl\";\n  UploadState[UploadState[\"UploadingFile\"] = 2] = \"UploadingFile\";\n})(UploadState || (UploadState = {}));\n\nexport var EditTodo = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(EditTodo, _React$PureComponent);\n\n  var _super = _createSuper(EditTodo);\n\n  function EditTodo() {\n    var _this;\n\n    _classCallCheck(this, EditTodo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      file: undefined,\n      uploadState: UploadState.NoUpload\n    };\n\n    _this.handleFileChange = function (event) {\n      var files = event.target.files;\n      if (!files) return;\n\n      _this.setState({\n        file: files[0]\n      });\n    };\n\n    _this.handleSubmit = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n        var uploadUrl;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                _context.prev = 1;\n\n                if (_this.state.file) {\n                  _context.next = 5;\n                  break;\n                }\n\n                alert('File should be selected');\n                return _context.abrupt(\"return\");\n\n              case 5:\n                _this.setUploadState(UploadState.FetchingPresignedUrl);\n\n                _context.next = 8;\n                return getUploadUrl(_this.props.auth.getIdToken(), _this.props.match.params.todoId);\n\n              case 8:\n                uploadUrl = _context.sent;\n\n                _this.setUploadState(UploadState.UploadingFile);\n\n                _context.next = 12;\n                return uploadFile(uploadUrl, _this.state.file);\n\n              case 12:\n                alert('File was uploaded!');\n                _context.next = 18;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](1);\n                alert('Could not upload a file: ' + _context.t0.message);\n\n              case 18:\n                _context.prev = 18;\n\n                _this.setUploadState(UploadState.NoUpload);\n\n                return _context.finish(18);\n\n              case 21:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 15, 18, 21]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(EditTodo, [{\n    key: \"setUploadState\",\n    value: function setUploadState(uploadState) {\n      this.setState({\n        uploadState: uploadState\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload new image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \"image/*\",\n              placeholder: \"Image to upload\",\n              onChange: this.handleFileChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), this.renderButton()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.uploadState === UploadState.FetchingPresignedUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Uploading image metadata\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 73\n        }, this), this.state.uploadState === UploadState.UploadingFile && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Uploading file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          loading: this.state.uploadState !== UploadState.NoUpload,\n          type: \"submit\",\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return EditTodo;\n}(React.PureComponent);","map":{"version":3,"sources":["C:/Users/123043/Documents/Code/udacity/udacity-project4/udacity-project4/client/src/components/EditTodo.tsx"],"names":["React","Form","Button","getUploadUrl","uploadFile","UploadState","EditTodo","state","file","undefined","uploadState","NoUpload","handleFileChange","event","files","target","setState","handleSubmit","preventDefault","alert","setUploadState","FetchingPresignedUrl","props","auth","getIdToken","match","params","todoId","uploadUrl","UploadingFile","message","renderButton","PureComponent"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { Form, Button } from 'semantic-ui-react'\r\nimport Auth from '../auth/Auth'\r\nimport { getUploadUrl, uploadFile } from '../api/todos-api'\r\n\r\nenum UploadState {\r\n  NoUpload,\r\n  FetchingPresignedUrl,\r\n  UploadingFile,\r\n}\r\n\r\ninterface EditTodoProps {\r\n  match: {\r\n    params: {\r\n      todoId: string\r\n    }\r\n  }\r\n  auth: Auth\r\n}\r\n\r\ninterface EditTodoState {\r\n  file: any\r\n  uploadState: UploadState\r\n}\r\n\r\nexport class EditTodo extends React.PureComponent<\r\n  EditTodoProps,\r\n  EditTodoState\r\n> {\r\n  state: EditTodoState = {\r\n    file: undefined,\r\n    uploadState: UploadState.NoUpload\r\n  }\r\n\r\n  handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = event.target.files\r\n    if (!files) return\r\n\r\n    this.setState({\r\n      file: files[0]\r\n    })\r\n  }\r\n\r\n  handleSubmit = async (event: React.SyntheticEvent) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      if (!this.state.file) {\r\n        alert('File should be selected')\r\n        return\r\n      }\r\n\r\n      this.setUploadState(UploadState.FetchingPresignedUrl)\r\n      const uploadUrl = await getUploadUrl(this.props.auth.getIdToken(), this.props.match.params.todoId)\r\n\r\n      this.setUploadState(UploadState.UploadingFile)\r\n      await uploadFile(uploadUrl, this.state.file)\r\n\r\n      alert('File was uploaded!')\r\n    } catch (e) {\r\n      alert('Could not upload a file: ' + e.message)\r\n    } finally {\r\n      this.setUploadState(UploadState.NoUpload)\r\n    }\r\n  }\r\n\r\n  setUploadState(uploadState: UploadState) {\r\n    this.setState({\r\n      uploadState\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Upload new image</h1>\r\n\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Field>\r\n            <label>File</label>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              placeholder=\"Image to upload\"\r\n              onChange={this.handleFileChange}\r\n            />\r\n          </Form.Field>\r\n\r\n          {this.renderButton()}\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderButton() {\r\n\r\n    return (\r\n      <div>\r\n        {this.state.uploadState === UploadState.FetchingPresignedUrl && <p>Uploading image metadata</p>}\r\n        {this.state.uploadState === UploadState.UploadingFile && <p>Uploading file</p>}\r\n        <Button\r\n          loading={this.state.uploadState !== UploadState.NoUpload}\r\n          type=\"submit\"\r\n        >\r\n          Upload\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}